{
  "info": {
    "_postman_id": "9f59b550-03a3-47e4-a45d-da20806e4716",
    "name": "TODO",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "register user",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "2ce3d81d-7848-4055-8d49-6b00bcf90b27",
            "exec": [
              "const jsonData = pm.response.json();",
              "",
              "pm.test(\"Status\", function() {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"Success is true\", () => {",
              "    pm.expect(jsonData.success).to.equal(true);",
              "});",
              "",
              "/*pm.test(\"Fail is false\", () => {",
              "    pm.expect(jsonData.fail).to.eql(false);",
              "}); */",
              "",
              "pm.test(\"Message is string\", () => {",
              "    pm.expect(jsonData.message).to.be.a(\"string\");",
              "});",
              "",
              "pm.test(\"Response time is less than 5000ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(5000);",
              "});",
              "",
              "pm.test(\"Returns 24 char alphanumeric id\", () => {pm.expect(jsonData.payload).to.match(/^[a-z0-Z]{24}$/); ",
              "});",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "c53d4b2f-3188-4084-835d-56cffd92c48a",
            "exec": [
              "pm.environment.set(\"userEmail\", \"bob.smith\"+ new Date().getTime() + \"@gmail.com\");",
              "pm.environment.set(\"userPassword\", \"ab47sr6c8x9znz\");"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "26dd41cf-6ce5-4d7f-a97c-f18fe10313ff",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\"email\": \"{{userEmail}}\",\n\"password\": \"{{userPassword}}\",\n\"name\": \"Bob Samuel\",\n\"phone\": \"012345678902\"\n}\n\n\n"
        },
        "url": "{{host}}/user/register"
      },
      "response": []
    },
    {
      "name": "user login ",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "70a11c68-d201-4fe8-972b-f1f292c4793a",
            "exec": [
              "const jsonData = pm.response.json();",
              "",
              "pm.environment.set(\"token\", jsonData.payload.token);",
              "",
              "pm.environment.set(\"userId\", jsonData.payload.user._id);",
              "",
              "",
              "",
              "",
              "pm.test(\"Status\", function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Success is true\", () => {",
              "    pm.expect(jsonData.success).to.equal(true);",
              "});",
              "",
              "",
              "pm.test(\"Message is string\", () => {",
              "    pm.expect(jsonData.message).to.be.a(\"string\");",
              "});",
              "",
              "pm.test(\"Response time is less than 5000ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(5000);",
              "});",
              "",
              "",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "3bdf4e75-a821-4ef1-b5c4-0ea9de455d19",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\n\"email\": \"{{userEmail}}\",\n\"password\": \"{{userPassword}}\"\n\n}"
        },
        "url": "{{host}}/user/login"
      },
      "response": []
    },
    {
      "name": "validate token",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "25ba41ba-760a-48b5-b0ed-cf421a6fd90d",
            "exec": [
              "const jsonData = pm.response.json();",
              "",
              "pm.test(\"Status\", function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Success is true\", () => {",
              "    pm.expect(jsonData.success).to.equal(true);",
              "});",
              "",
              "",
              "pm.test(\"Message is string\", () => {",
              "    pm.expect(jsonData.message).to.be.a(\"string\");",
              "});",
              "",
              "pm.test(\"Response time is less than 5000ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(5000);",
              "});",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "321b47fb-257c-4b22-9d19-d38de4c138c9",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Authorization",
            "value": "{{token}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": "{{host}}/user/token"
      },
      "response": []
    },
    {
      "name": "get all",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "23b0cf6f-43f9-4cbb-82cf-8dc762cffbd0",
            "exec": [
              "const jsonData = pm.response.json();",
              "",
              "pm.test(\"Status\", function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Success is true\", () => {",
              "    pm.expect(jsonData.success).to.equal(true);",
              "});",
              "",
              "",
              "pm.test(\"Message is string\", () => {",
              "    pm.expect(jsonData.message).to.be.a(\"string\");",
              "});",
              "",
              "pm.test(\"Response time is less than 5000ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(5000);",
              "});",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "0b875141-1071-4e03-8451-d511620da16d",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "{{token}}",
            "type": "text"
          }
        ],
        "url": "{{host}}/user"
      },
      "response": []
    },
    {
      "name": "get by Id",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "bb410d7a-5778-45a3-96fa-b9785a465306",
            "exec": [
              "const jsonData = pm.response.json();",
              "",
              "pm.test(\"Status\", function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Success is true\", () => {",
              "    pm.expect(jsonData.success).to.equal(true);",
              "});",
              "",
              "",
              "pm.test(\"Message is string\", () => {",
              "    pm.expect(jsonData.message).to.be.a(\"string\");",
              "});",
              "",
              "pm.test(\"Response time is less than 5000ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(5000);",
              "});",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "35937599-4f9c-487c-a436-b2d7c573f05d",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "{{token}}",
            "type": "text"
          }
        ],
        "url": "{{host}}/user/{{userId}}"
      },
      "response": []
    },
    {
      "name": "patch by Id",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "b97f70a5-9c46-4c26-8510-7d5be7897b77",
            "exec": [
              "const jsonData = pm.response.json();",
              "",
              "pm.test(\"Status\", function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Success is true\", () => {",
              "    pm.expect(jsonData.success).to.equal(true);",
              "});",
              "",
              "",
              "pm.test(\"Message is string\", () => {",
              "    pm.expect(jsonData.message).to.be.a(\"string\");",
              "});",
              "",
              "pm.test(\"Response time is less than 5000ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(5000);",
              "});",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "1eb99b03-99c7-47d4-b2e2-dc79fd6c9320",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Authorization",
            "value": "{{token}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\"email\": \"{{userEmail}}\",\n\"password\": \"{{userPassword}}\",\n\"name\": \"Bob Samuel\",\n\"phone\": \"012345678902\"\n}"
        },
        "url": "{{host}}/user/{{userId}}"
      },
      "response": []
    },
    {
      "name": "delete user",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "41c4fb70-0423-49fd-ad31-ddc4d3250ae5",
            "exec": [
              "const jsonData = pm.response.json();",
              "",
              "pm.test(\"Status\", function() {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Success is true\", () => {",
              "    pm.expect(jsonData.success).to.equal(true);",
              "});",
              "",
              "pm.test(\"Message is string\", () => {",
              "    pm.expect(jsonData.message).to.be.a(\"string\");",
              "});",
              "",
              "pm.test(\"Response time is less than 5000ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(5000);",
              "});",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "cd2184e4-fa86-4bb3-bd3d-e56089b80395",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "{{token}}",
            "type": "text"
          }
        ],
        "url": "{{host}}/user/{{userId}}"
      },
      "response": []
    },
    {
      "name": "create",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "24315dd7-9104-45a6-8b78-3676792217fb",
            "exec": [
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "_postman_id": "136e554d-17c8-4e06-ac17-7311d7f8a33d",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/json",
            "type": "text"
          },
          {
            "key": "Authorization",
            "value": "{{token}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"Bob Samuel\",\n    \"accessType\": \"all\",\n    \"description\": \"Postman\",\n    \"owner\": \"5d4270e7697b3000048b469b\"\n}"
        },
        "url": "{{host}}/group"
      },
      "response": []
    },
    {
      "name": "getall",
      "_postman_id": "5f107d96-42cd-480c-aef9-1677139d9832",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "{{token}}",
            "type": "text"
          }
        ],
        "url": "{{host}}/group"
      },
      "response": []
    },
    {
      "name": "getById",
      "_postman_id": "bfafd8bd-6863-4ad7-8d78-47fe01c16285",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "GET",
        "header": [],
        "url": "{{host}}/group/{{groupId}"
      },
      "response": []
    }
  ]
}